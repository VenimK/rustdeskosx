[target.x86_64-pc-windows-msvc]
rustflags = ["-Ctarget-feature=+crt-static"]
[target.i686-pc-windows-msvc]
rustflags = ["-C", "target-feature=+crt-static", "-C", "link-args=/NODEFAULTLIB:MSVCRT"]
[target.'cfg(target_os="macos")']
rustflags = [
    "-C", "link-args=-sectcreate __CGPreLoginApp __cgpreloginapp /dev/null",
]
#[target.'cfg(target_os="linux")']
# glibc-static required, this may fix https://github.com/rustdesk/rustdesk/issues/9103, but I do not want this big change
# this is unlikely to help also, because the other so files still use libc dynamically
#rustflags = [
#    "-C", "link-args=-Wl,-Bstatic -lc -Wl,-Bdynamic"
#]
[target.aarch64-linux-android]
linker = "aarch64-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-L$ANDROID_NDK_HOME/platforms/android-21/arch-arm64/usr/lib",
    "-C", "link-arg=-L$ANDROID_NDK_HOME/platforms/android-21/arch-arm/usr/lib",
]

[target.armv7-linux-androideabi]
linker = "armv7-linux-androideabi21-clang"
rustflags = [
    "-C", "link-arg=-L$ANDROID_NDK_HOME/platforms/android-21/arch-arm/usr/lib",
]

[target.i686-linux-android]
linker = "i686-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-L$ANDROID_NDK_HOME/platforms/android-21/arch-x86/usr/lib",
]

[target.x86_64-linux-android]
linker = "x86_64-linux-android21-clang"
rustflags = [
    "-C", "link-arg=-L$ANDROID_NDK_HOME/platforms/android-21/arch-x86_64/usr/lib",
]
